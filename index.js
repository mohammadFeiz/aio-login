function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"==typeof t?t:String(t)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var r=i.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}import e,{Component as t,createRef as i}from"react";import r from"react-virtual-dom";import o from"aio-storage";import s,{getFormInputs as n}from"aio-input";import{Icon as l}from"@mdi/react";import{mdiCellphone as a,mdiLock as u,mdiLoading as d,mdiAccount as p,mdiAccountBoxOutline as g,mdiEmail as m,mdiChevronRight as h}from"@mdi/js";import f from"aio-popup";import"./index.css";import{jsx as b}from"react/jsx-runtime";import{jsxs as c}from"react/jsx-runtime";export default class y{constructor(e){_defineProperty(this,"render",(e={})=>{let{attrs:t=this.props.attrs,profile:i}=e;if(i&&("object"!=typeof i||!Array.isArray(i.fields)||!i.fields.length||"function"!=typeof i.onSubmit)){let r=`
                    aio-login-error => profile props should be an object contain :
                    submitText : string | undefined,
                    title : string | undefined,
                    subtitle : string | undefined,
                    fields : ( <default field> | string )[],
                    model : { [ field : <default field>] : any },
                    onClose : (() => void) | undefined,
                    onSubmit : ( model : { [ field : <default field> ] : any } ) => void,
                    <default field> : (
                        "fullname" | "firstname" | "lastname" | "username" | "address" | "email" | "fathername" | "phone" | "mobile" | "postalcode",
                        "nationalcode" | "idcode" | "cardbank" | "state" | "city" | "gender" | "married" | "militaryservice" | "location"
                    )`;return alert(r),console.log(r),null}return b(AIOLOGIN,{...this.props,getActions:({setMode:e})=>this.setMode=e,profile:i,attrs:t})});let{id:t,onAuth:i,onSubmit:r,modes:s,timer:n,checkToken:l,register:a,userId:u,attrs:d,forget:p,otpLength:g}=e;AIOLoginValidator(e);let m=o(`-AIOLogin-${t}`);this.setStorage=(e,t)=>{if("object"==typeof e)for(let i in e)m.save({name:i,value:e[i]});else m.save({name:e,value:t})},this.getStorage=e=>{let t=m.load({name:"token",def:!1}),i=m.load({name:"userId",def:""}),r=m.load({name:"userInfo"}),o={token:t,userId:i,userInfo:r};return e?o[e]:o},this.removeStorage=e=>m.remove({name:e}),this.logout=()=>{this.removeStorage("token"),window.location.reload()},this.props={id:t,checkToken:l,onAuth:i,onSubmit:r,modes:s,register:a,userId:u,attrs:d,timer:n,forget:p,otpLength:g,getStorage:this.getStorage.bind(this),setStorage:this.setStorage.bind(this),removeStorage:this.removeStorage.bind(this),logout:this.logout}}};class AIOLOGIN extends t{constructor(e){super(e),this.state={isTokenChecked:!1,showReload:!1,mode:e.mode||e.modes[0],loading:!1},e.getActions({setMode:this.setMode.bind(this)})}async checkToken(){let{getStorage:e,checkToken:t,removeStorage:i}=this.props,{token:r,userId:o,userInfo:s}=e(),n;if("string"!=typeof r)n=!1;else try{n=await t(r,{userId:o,userInfo:s})}catch(l){new f().addAlert({type:"error",text:"بررسی توکن با خطا روبرو شد",subtext:this.getError(l)})}!0===n?this.setMode("auth"):!1===n?i("token"):("string"==typeof n&&new f().addAlert({type:"error",text:"بررسی توکن با خطا روبرو شد",subtext:n}),this.setState({showReload:!0})),this.setState({isTokenChecked:!0})}getError(e){if("string"==typeof e)return e;if("object"==typeof e){if("object"!=typeof e.response)return e.message||e.Message;if("object"==typeof e.response.data){let{message:t,Message:i}=e.response.data;return i||t}return"string"==typeof e.response.data?e.response.data:"error"}}async componentDidMount(){let{profile:e}=this.props;!e&&this.checkToken()}setLoading(e){this.setState({loading:e})}async onSubmit(e){let{onSubmit:t}=this.props,{mode:i}=this.state,r;this.setLoading(!0);try{r=await t(e,i)}catch{this.setLoading(!1);return}if(this.setLoading(!1),"string"==typeof r){let o={OTPNumber:"ارسال شماره همراه",OTPCode:"ارسال کد یکبار مصرف",userName:"ارسال نام کاربری و رمز عبور",phoneNumber:"ارسال شماره همراه و رمز عبور",email:"ارسال آدرس ایمیل و رمز عبور",register:"عملیات ثبت نام"}[i];o=`${o} با خطا روبرو شد`;let s=r;new f().addAlert({type:"error",text:o,subtext:s})}}async onSubmitProfile(e){let{profile:t}=this.props,i;this.setLoading(!0);try{i=await t.onSubmit(e)}catch{this.setLoading(!1);return}this.setLoading(!1),"string"==typeof i&&new f().addAlert({type:"error",text:"ویرایش پروفایل با خطا روبرو شد",subtext:i})}setMode(e){this.setState({mode:e})}render(){let{otpLength:e,onAuth:t,id:i,timer:r,modes:o,userId:s,register:n={},profile:l,attrs:a={},forget:u,getStorage:d,logout:p,splash:g=()=>null}=this.props,{isTokenChecked:m,showReload:h,mode:f,loading:c}=this.state;if(l)return b(LoginForm,{timer:r,id:i,attrs:a,userId:s,loading:c,profile:l,onSubmitProfile:this.onSubmitProfile.bind(this)});if(h)return b("div",{className:"aio-login-reload",children:b("button",{onClick:()=>window.location.reload(),children:"بارگذاری مجدد"})});if(!m)return g();if("auth"===f){if(!this.reportedAuthToParent){this.reportedAuthToParent=!0;let{token:y,userId:$,userInfo:_}=d();t({token:y,userId:$,userInfo:_,logout:p})}return g()}return b(LoginForm,{forget:u,timer:r,otpLength:e,id:i,modes:o,attrs:a,userId:s,register:n,loading:c,mode:f,onSubmit:this.onSubmit.bind(this),onChangeMode:this.setMode.bind(this)})}}class LoginForm extends t{constructor(e){super(e),this.storage=o(`-AIOLogin-${e.id}`);let{timer:t=30}=e;this.state={timer:t,recode:!1,tab:"login",model:this.getInitialModel(e.mode),error:!e.userId}}getLabels(e){let{model:t,tab:i}=this.state,{register:r,profile:o,forget:s}=this.props;if(o){let{title:n,onClose:l,submitText:a="ویرایش اطلاعات کاربری",subtitle:u=!1}=o;return n||l?{inputLabel:!1,title:n||"ویرایش اطلاعات کاربری",submitText:a,subtitle:u,backButton:!!l}:{inputLabel:!1,title:!1,subtitle:!1,submitText:a,backButton:!1}}if("OTPNumber"===e)return{inputLabel:"شماره همراه",title:"ورود با کد یکبار مصرف",submitText:"ورود",subtitle:"شماره همراه خود را وارد کنید . پیامکی حاوی کد برای شما ارسال خواهد شد"};if("OTPCode"===e)return{inputLabel:"کد پیامک شده",title:!1,submitText:"ورود",subtitle:`کد پیامک شده به شماره ی ${t.login.userId} را وارد کنید`};if("register"===e){let{title:d,submitText:p="ثبت نام",subtitle:g=!1}=r;return{inputLabel:!1,title:d,submitText:p,subtitle:g,backButton:"register"!==i}}if("forgetUserId"===e){let m=`${"phoneNumber"===s.mode?"شماره همراه":"ایمیل"} خود را وارد کنید . کد باز یابی رمز عبور برای شما ارسال خواهد شد`;return{inputLabel:"email"===s.mode?"ایمیل":"شماره همراه",backButton:!0,title:"بازیابی رمز عبور",submitText:"دریافت کد بازیابی رمز",subtitle:m}}if("forgetPassword"===e){let{mode:h}=s,f=`کد ${"phoneNumber"===h?"پیامک":"ایمیل"} شده به ${"phoneNumber"===h?"شماره ی":"آدرس"} ${t.forget.userId} را وارد کنید`;return{inputLabel:`کد ${"email"===h?"ایمیل":"پیامک"} شده`,backButton:!0,title:"بازیابی رمز عبور",submitText:"تایید",subtitle:f}}return"userName"===e?{inputLabel:"نام کاربری",title:"ورود با نام کاربری",submitText:"ورود",subtitle:!1}:"email"===e?{inputLabel:"ایمیل",title:"ورود با ایمیل",submitText:"ورود",subtitle:!1}:"phoneNumber"===e?{inputLabel:"شماره همراه",title:"ورود با شماره همراه",submitText:"ورود",subtitle:!1}:void 0}changeMode(e){let{onChangeMode:t}=this.props;t(e),this.setState({model:this.getInitialModel(e)})}getInitialModel(e){e||(e=this.props.mode);let{userId:t,profile:i={}}=this.props;return{forget:{},register:{},profile:i.model,login:{userId:t}}}title_layout({title:e,backButton:t}){if(!e)return!1;let{modes:i,profile:r}=this.props;return{className:"aio-login-title",align:"v",row:[{show:!!t,html:b(l,{path:h,size:1}),size:48,align:"vh",onClick:()=>r?r.onClose():this.changeMode(i[0])},{html:e}]}}subtitle_layout({subtitle:e}){return!!e&&{html:e,className:"aio-login-subtitle"}}getInput_phoneNumber(e,t){return{field:e,label:"شماره همراه",input:{type:"text",justNumber:!0,before:b(l,{path:a,size:.8}),placeholder:"09...",maxLength:11,attrs:{style:{direction:"ltr"}}},validations:[["function",()=>{let e=t();return e?0!==e.indexOf("09")?"شماره همراه باید با 09 شروع شود":11!==e.length&&"شماره همراه باید 11 رقم باشد":"شماره همراه خود را وارد کنید"}]]}}getInput_userName(e){let{userId:t}=this.props;return{field:e,label:"نام کاربری",validations:[["required"]],style:{direction:"ltr"},input:{type:"text",disabled:!!t,before:b(l,{path:p,size:.8})}}}getInput_email(e,t){let{userId:i}=this.props;return{field:e,label:"ایمیل",style:{direction:"ltr"},input:{type:"text",disabled:!!i,before:b(l,{path:m,size:.8})},validations:[["function",()=>{let e=t();return e?!!(1>e.indexOf("@")||-1===e.indexOf(".")||e.lastIndexOf(".")>e.length-3)&&"ایمیل خود را به درستی وارد کنید":"ایمیل خود را وارد کنید"}]]}}getInput_otp(e,t){let{otpLength:i}=this.props;return{field:e,label:"رمز یکبار مصرف",input:{maxLength:i,justNumber:!0,type:"text",placeholder:Array(i).fill("-").join(""),className:"aio-login-otp-code"},validations:[["function",()=>{let{otpLength:e}=this.props,i=t();return i?i.length!==e&&`رمز یکبار مصرف باید شامل ${e} کاراکتر باشد`:"رمز یکبار مصرف را وارد کنید"}]]}}getInput_password(e,t){let i;return i=2===t?[["function",()=>{let{model:e}=this.state,t=e.forget.reNewPassword;return t?t.length<1?"رمز عبور را وارد کنید":t!==e.forget.newPassword&&"رمز با تکرار آن مطابقت ندارد":"تکرار رمز عبور جدید را وارد کنید"}]]:[["required"]],{field:e,label:["رمز عبور","رمز عبور جدید","تکرار رمز عبور جدید"][t],validations:i,input:{type:"password",before:b(l,{path:u,size:.8}),style:{direction:"ltr"},visible:!0}}}getInputs(){let{forget:e,mode:t,profile:i,register:r}=this.props;return i?n(i.fields,"profile"):"register"===t?n(r.fields,"register"):"forgetUserId"===t?[this["getInput_"+e.mode]("value.forget.userId",()=>this.state.model.forget.userId)]:"forgetPassword"===t?[this.getInput_otp("value.forget.password",()=>this.state.model.forget.password),this.getInput_password("value.forget.newPassword",1),this.getInput_password("value.forget.reNewPassword",2)]:"OTPNumber"===t?[this.getInput_phoneNumber("value.login.userId",()=>this.state.model.login.userId)]:"OTPCode"===t?[this.getInput_otp("value.login.password",()=>this.state.model.login.password)]:[this["getInput_"+t]("value.login.userId",()=>this.state.model.login.userId),this.getInput_password("value.login.password",0)]}form_layout(e){let{model:t}=this.state,{mode:i,userId:r}=this.props;return{className:"ofy-auto",html:b(s,{type:"form",lang:"fa",value:t,rtl:!0,initialDisabled:!r,onChange:(e,t)=>{this.setState({model:e,error:!!t.length})},inputs:{props:{gap:12},column:this.getInputs(e)},footer:({disabled:t})=>this.submit_layout({submitText:e.submitText,disabled:t})},i)}}submit_layout({submitText:e,disabled:t}){let{loading:i,timer:o,mode:s}=this.props,n={style:{padding:"0 12px"},html:b(SubmitButton,{mode:s,timer:o,text:e,loading:i,disabled:()=>!!t,onClick:()=>this.onSubmit()})};return b(r,{layout:n})}async onSubmit(){let{onSubmit:e,profile:t,onSubmitProfile:i}=this.props,{model:r,error:o}=this.state;!o&&(t?i(r):e(r))}changeUserId_layout(){let{mode:e}=this.props;return"OTPCode"===e&&{onClick:()=>this.changeMode("OTPNumber"),className:"aio-login-text m-b-12",align:"vh",html:"تغییر شماره همراه"}}recode_layout(){let{model:e}=this.state,{mode:t,onChangeMode:i}=this.props;return"OTPCode"===t&&{className:"aio-login-text m-b-12",html:`ارسال مجدد کد`,align:"vh",onClick:()=>{i("OTPNumber"),this.setState({model:{...e,login:{...e.login,password:""}}})}}}changeMode_layout(){let{mode:e,modes:t,profile:i}=this.props;if("register"===e||i||"forgetUserId"===e||"forgetPassword"===e)return!1;let r=[];for(let o=0;o<t.length;o++){let s=t[o];if(e===s||"OTPCode"===e&&"OTPNumber"===s)continue;let n={OTPNumber:"رمز یکبار مصرف",userName:"نام کاربری و رمز عبور",email:"آدرس ایمیل و رمز عبور",phoneNumber:"شماره همراه و رمز عبور"}[s],u={OTPNumber:p,phoneNumber:a,userName:g,email:m}[s];r.push({flex:1,className:`of-visible aio-login-other-method aio-login-${s}`,onClick:()=>this.changeMode(s),row:[{html:b(l,{path:u,size:.7}),align:"vh"},{size:6},{align:"v",html:n}]})}return!!r.length&&{className:"p-h-12",column:[{gap:6,row:[{flex:1,html:b("div",{className:"aio-login-splitter"}),align:"v"},{html:"یا ورود با",align:"v",className:"aio-login-or bold"},{flex:1,html:b("div",{className:"aio-login-splitter"}),align:"v"}]},{size:12},{grid:r,gridCols:1,gridRow:{gap:12}}]}}registerButton_layout(){let{register:e,mode:t}=this.props;return"register"===t||e.type,!1}registerTab_layout(){let{register:e,modes:t,mode:i,profile:r}=this.props;if(!e||"tab"!==e.type||r||"forgetUserId"===i||"forgetPassword"===i)return!1;let{tabText:o="ثبت نام"}=e;return{html:b(s,{className:"aio-login-register-tabs",type:"tabs",value:"register"===i?"register":"login",options:[{text:"ورود",value:"login"},{text:o,value:"register"}],onChange:e=>{"login"===e?this.changeMode(t[0]):"register"===e&&this.changeMode("register")}})}}forget_layout(){let{forget:e,mode:t,profile:i}=this.props;if(i||!e||"register"===t||"OTPCode"===t||"OTPNumber"===t||"forgetUserId"===t||"forgetPassword"===t)return!1;let{text:r=[]}=e;return{className:"aio-login-forget",html:r[0]||"رمز عبور خود را فراموش کرده اید؟ اینجا کلیک کنید",onClick:()=>this.changeMode("forgetUserId")}}render(){let{attrs:e,mode:t,profile:i}=this.props,o=this.getLabels(t),s;s=i?[{column:[this.title_layout(o),this.subtitle_layout(o)]},this.form_layout(o)]:[this.registerTab_layout(),{column:[this.title_layout(o),this.subtitle_layout(o)]},this.form_layout(o),this.forget_layout(),{gap:12,align:"h",row:[this.recode_layout(),this.changeUserId_layout()]},this.changeMode_layout(),this.registerButton_layout()];let n="aio-login"+(e.className?" "+e.className:""),l=e.style;return b(r,{layout:{className:n,style:l,column:s,attrs:{onKeyDown:e=>{13===e.keyCode&&this.onSubmit()}}}})}}class SubmitButton extends t{constructor(...e){super(...e),_defineProperty(this,"state",{time:this.getDelta()})}async onClick(){let{onClick:e,loading:t}=this.props;!t&&(this.setLastTry(),await e())}setLastTry(){let{mode:e}=this.props;o("aiologinlasttrypermode").save({name:"dic",value:{...this.getLastTry(),[e]:new Date().getTime()}});let t=this.getDelta();this.setState({time:t})}getLastTry(){return o("aiologinlasttrypermode").load({name:"dic",def:{}})}getDelta(){let{mode:e,timer:t}=this.props;if(!t)return 0;let i=this.getLastTry()[e];if(!i)return 0;let r=new Date().getTime()-i;return r/=1e3,(r=Math.round(r=t-r))<0&&(r=0),r}render(){let{disabled:e,loading:t,text:i,outline:r}=this.props,o=e(),{time:s}=this.state;return s>0?setTimeout(()=>this.setState({time:this.state.time-1}),1e3):s<0&&setTimeout(()=>this.setState({time:0}),0),s&&(o=!0,t||(i=`لطفا ${s} ثانیه صبر کنید`)),c("button",{className:"aio-login-submit"+(r?" aio-login-submit-outline":""),disabled:o,onClick:()=>this.onClick(),children:[!t&&i,!!t&&b(l,{path:d,size:1,spin:.2,style:{margin:"0 6px"}}),!!t&&"در حال ارسال"]})}}function AIOLoginValidator(e){let{id:t,onAuth:i,onSubmit:r,modes:o,timer:s,checkToken:n,register:l,userId:a="",attrs:u,forget:d,otpLength:p}=e;for(let g in e)if(-1===["id","onAuth","onSubmit","modes","timer","checkToken","register","userId","attrs","forget","otpLength","splash"].indexOf(g)){let m=`
                aio-login error => invalid props 
                ${g} is not one of AIOLogin props,
                valid props are 'id' | 'onAuth' | 'onSubmit' | 'modes' | 'timer' | 'checkToken' | 'register' | 'userId' | 'attrs' | 'forget' | 'otpLength' | 'splash'
            `;alert(m),console.log(m);return}if(t||alert("aio-login error=> missing id props, id props should be an string"),!i){let h=`
            aio-login error => missing onAuth props
            onAuth type is => ({token:string,userId:string,userInfo?:any,logout:function})=>void
        `;alert(h),console.log(h);return}if("string"!=typeof a){let f="aio-login error=> userId props should be an string";alert(f),console.log(f);return}if(!n){let b=`
            aio-login error=> missing checkToken props 
            checkToken type is => (token:string)=>boolean
            for prevent it set checkToken : ()=>true
        `;alert(b),console.log(b);return}if(!r){let c=`
            aio-login error=> missing onSubmit props,
            onSubmit type is => 
            (model:<model type>,mode:<mode type>)=>string|undefined
            <model type> is {
                login:{userId:string,password:string | number},
                forget:{userId:string,password:string | number},
                register:{[field:string]:any},
            }
            <mode type> is 'OTPNumber' | 'OTPCode' | 'userName' | 'email' | 'phoneNumber' | 'forgetUserId' | 'forgetPassword' | 'register' | 'auth'
        `;alert(c),console.log(c);return}if("number"!=typeof s){let y="aio-login error=> timer props should be an number";alert(y),console.log(y);return}if(!Array.isArray(o)||!o.filter(e=>-1!==["OTPNumber","userName","email","phoneNumber"].indexOf(e)).length){let $=`
            aio-login error=> modes props should be an array contain composite of 'OTPNumber' | 'userName' | 'email' | 'phoneNumber'
        `;alert($),console.log($);return}if(-1!==o.indexOf("OTPNumber")&&!p){let _="aio-login error => otpLength props is not an number (for define length of otp code)";alert(_),console.log(_);return}if(l&&("object"!=typeof l||-1===["mode","tab","button"].indexOf(l.type)||!Array.isArray(l.fields)||!l.fields.length)){let v=`
                aio-login-error => register props should be an object contain :
                type : "mode" | "tab" | "button"
                tabText : string | undefined
                buttonText : string | undefined
                submitText : string | undefined
                title : string | undefined
                subtitle : string | undefined
                fields:(<default field> | object)[]

                <default field>:(
                    "fullname" | "firstname" | "lastname" | "username" | "address" | "email" | "fathername" | "phone" | "mobile" | "postalcode",
                    "nationalcode" | "idcode" | "cardbank" | "state" | "city" | "gender" | "married" | "militaryservice" | "location"
                )
            `;alert(v),console.log(v);return}if(d){let N="aio-login error=> forget props should be an object contain mode:'phoneNumber | email'";if("object"!=typeof d&&alert(N),-1===["phoneNumber","email"].indexOf(d.mode)){alert(N),console.log(N);return}}}